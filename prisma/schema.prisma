generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ------------------------------------------------------------------------------------------------
// Enums
// ------------------------------------------------------------------------------------------------

enum AltitudeChange {
  CLIMBING
  DESCENDING
  LEVEL
  UNKNOWN
}

enum UpdateType {
  PROJECTED
  OCEANIC
  RADAR
  ADSB
  MULTILATERATION
  DATALINK
  ADSB_ASDEX
  SPACE
  UNKNOWN
}

enum CategoryClass {
  ASEL // Airplane Single-Engine Land
  AMEL // Airplane Multi-Engine Land
  ASES // Airplane Single-Engine Sea
  AMES // Airplane Multi-Engine Sea
  RH // Rotocraft Helicopter
  RG // Rotocraft Gyroplane
  GL // Glider
  LA // Lighter Than Air Airship
  LB // Lighter Than Air Balloon
  PLIFT // Powered Lift
  PL // Powered Parachute Land
  PS // Powered Parachute Land
  WL // Weight Shift Control Land
  WS // Weight Shift Control Sea
}

enum GearType {
  AM // Amphibian
  FC // Fixed Tailwheel
  FT // Fixed Tricycle
  FL // Floats
  RC // Retractable Tailwheel
  RT // Retractable Tricycle
  SK // Skids
  SI // Skis
}

enum EngineType {
  DS // Diesel
  EL // Electric
  NP // Non-Powered
  PT // Piston
  RA // Radial
  TF // Turbofan
  TJ // Turbojet
  TP // Turboprop
  TS // Turboshaft
}

// ------------------------------------------------------------------------------------------------
// Primary Datatypes
// ------------------------------------------------------------------------------------------------

model Tour {
  id      Int       @id @default(autoincrement())
  days    DutyDay[]
  options Option[]

  @@map("tours")
}

model DutyDay {
  id                  Int   @id @default(autoincrement())
  tourId              Int
  tour                Tour  @relation(fields: [tourId], references: [id], onDelete: Restrict)
  legs                Leg[]
  startTime_utc       Int
  startTimezoneOffset Int
  endTime_utc         Int
  endTimezoneOffset   Int

  @@map("days")
}

model Option {
  id String @id @default(uuid())

  tourId Int
  tour   Tour @relation(fields: [tourId], references: [id], onDelete: Cascade)

  inaccurateTiming  Boolean
  ident             String  @db.VarChar(16)
  faFlightId        String
  operator          String? @db.VarChar(16)
  flightNumber      String? @db.VarChar(16)
  registration      String? @db.VarChar(16)
  inboundFaFlightId String?

  blocked      Boolean
  diverted     Boolean
  cancelled    Boolean
  positionOnly Boolean

  originAirportId      String? @db.VarChar(5)
  destinationAirportId String? @db.VarChar(5)
  diversionAirportId   String? @db.VarChar(5)

  departureDelay      Int?
  arrivalDelay        Int?
  filedEte            Int?
  progressPercent     Int?
  status              String
  aircraftType        String? @db.VarChar(32)
  routeDistance       Int?
  filedAirspeed       Int?
  filedAltitude       Int?
  filedRoute          String?
  seatsCabinBusiness  Int?
  seatsCabinCoach     Int?
  seatsCabinFirst     Int?
  gateOrigin          String? @db.VarChar(16)
  gateDestination     String? @db.VarChar(16)
  terminalOrigin      String? @db.VarChar(16)
  terminalDestination String? @db.VarChar(16)
  type                String

  scheduledOut Int?
  scheduledOff Int?
  actualOut    Int?
  actualOff    Int?
  scheduledIn  Int?
  scheduledOn  Int?
  actualIn     Int?
  actualOn     Int?

  startTime Int
  endTime   Int

  @@unique([faFlightId])
  @@map("options")
}

model FlightAwareData {
  faFlightId String @id

  operator          String? @db.VarChar(16)
  flightNumber      String? @db.VarChar(16)
  registration      String? @db.VarChar(16)
  inboundFaFlightId String?

  blocked      Boolean
  diverted     Boolean
  cancelled    Boolean
  positionOnly Boolean

  departureDelay      Int?
  arrivalDelay        Int?
  filedEte            Int?
  progressPercent     Int?
  status              String  @db.VarChar(64)
  aircraftType        String? @db.VarChar(32)
  routeDistance       Int?
  filedAirspeed       Int?
  filedAltitude       Int?
  filedRoute          String?
  seatsCabinBusiness  Int?
  seatsCabinCoach     Int?
  seatsCabinFirst     Int?
  gateOrigin          String? @db.VarChar(16)
  gateDestination     String? @db.VarChar(16)
  terminalOrigin      String? @db.VarChar(16)
  terminalDestination String? @db.VarChar(16)
  type                String

  scheduledOut Int?
  scheduledOff Int?
  actualOut    Int?
  actualOff    Int?
  scheduledIn  Int?
  scheduledOn  Int?
  actualIn     Int?
  actualOn     Int?

  legId String @unique
  leg   Leg    @relation(fields: [legId], references: [id])

  @@map("flightAwareData")
}

model Leg {
  id        String     @id @default(uuid())
  dayId     Int?
  day       DutyDay?   @relation(fields: [dayId], references: [id], onDelete: Restrict)
  positions Position[]
  fixes     Fix[]

  flightAwareData FlightAwareData?

  ident String? @db.VarChar(16)

  originAirportId      String   @db.VarChar(5)
  destinationAirportId String   @db.VarChar(5)
  diversionAirportId   String?  @db.VarChar(5)
  originAirport        Airport  @relation("originAirport", fields: [originAirportId], references: [id], onDelete: Restrict)
  destinationAirport   Airport  @relation("destinationAirport", fields: [destinationAirportId], references: [id], onDelete: Restrict)
  diversionAirport     Airport? @relation("diversionAirport", fields: [diversionAirportId], references: [id], onDelete: Restrict)

  startTime Int?
  endTime   Int?

  totalTime Float @default(0)
  pic       Float @default(0)
  sic       Float @default(0)
  night     Float @default(0)
  solo      Float @default(0)
  xc        Float @default(0)
  distance  Float @default(0)

  dayTakeOffs   Int @default(0)
  dayLandings   Int @default(0)
  nightTakeOffs Int @default(0)
  nightLandings Int @default(0)

  simulatedInstrument Float @default(0)
  actualInstrument    Float @default(0)
  holds               Int   @default(0)

  dualGiven    Float @default(0)
  dualReceived Float @default(0)
  sim          Float @default(0)

  flightReview Boolean @default(false)
  checkride    Boolean @default(false)
  ipc          Boolean @default(false)
  faa6158      Boolean @default(false)

  passengers Int @default(0)

  notes String @default("") @db.VarChar(1024)

  aircraft                  Aircraft @relation(fields: [aircraftId], references: [id], onDelete: Restrict)
  aircraftId      String
  flightAwareDataFaFlightId String?

  @@map("legs")
}

model Settings {
  setting String @id
  value   String

  @@map("settings")
}

// ------------------------------------------------------------------------------------------------
// Supporting Datatypes
// ------------------------------------------------------------------------------------------------

model AircraftType {
  id String @id

  typeCode        String
  subCode         String?
  make            String
  model           String
  catClass        CategoryClass
  gear            GearType
  engine          EngineType
  complex         Boolean
  taa             Boolean
  highPerformance Boolean
  pressurized     Boolean

  image   Image?  @relation(fields: [imageId], references: [id], onDelete: Restrict)
  imageId String? @unique

  aircraft Aircraft[]

  @@unique([typeCode, subCode])
  @@map("aircraft-types")
}

model Aircraft {
  id String @id
  registration String @unique

  aircraftTypeId String
  type           AircraftType @relation(fields: [aircraftTypeId], references: [id], onDelete: Restrict)
  year           Int?
  serial         String?

  simulator       Boolean  @default(false)
  complex         Boolean?
  taa             Boolean?
  highPerformance Boolean?
  pressurized     Boolean?

  notes   String?
  image   Image?  @relation(fields: [imageId], references: [id], onDelete: Restrict)
  imageId String? @unique
  legs    Leg[]

  @@map("aircraft")
}

model Image {
  id        String @unique
  original  Bytes
  fullJpeg  Bytes
  fullAvif  Bytes
  i2048Jpeg Bytes
  i2048Avif Bytes
  i1024Jpeg Bytes
  i1024Avif Bytes
  i768Jpeg  Bytes
  i768Avif  Bytes
  i512Jpeg  Bytes
  i512Avif  Bytes
  i256Jpeg  Bytes
  i256Avif  Bytes
  i128Jpeg  Bytes
  i128Avif  Bytes

  aircraft     Aircraft?
  aircraftType AircraftType?

  @@map("images")
}

model Airport {
  id          String  @id
  timezone    String
  name        String
  city        String
  infoURL     String?
  latitude    Decimal
  longitude   Decimal
  countryCode String

  legOrigin      Leg[] @relation("originAirport")
  legDestination Leg[] @relation("destinationAirport")
  legDiversion   Leg[] @relation("diversionAirport")

  @@unique([latitude, longitude])
  @@map("airports")
}

model Position {
  legId          String
  altitude       Int
  altitudeChange AltitudeChange
  groundspeed    Int
  heading        Int
  latitude       Decimal
  longitude      Decimal
  timestamp      Int
  updateType     UpdateType?

  leg Leg @relation(fields: [legId], references: [id], onDelete: Cascade)

  @@unique([legId, timestamp, latitude, longitude])
  @@map("positions")
}

model Fix {
  id                    Int      @id @default(autoincrement())
  legId                 String
  name                  String
  latitude              Decimal?
  longitude             Decimal?
  distanceFromOrigin    Decimal?
  distanceThisLeg       Decimal?
  distanceToDestination Decimal?
  outboundCourse        Int?
  type                  String

  leg Leg @relation(fields: [legId], references: [id], onDelete: Cascade)

  @@map("fixes")
}
